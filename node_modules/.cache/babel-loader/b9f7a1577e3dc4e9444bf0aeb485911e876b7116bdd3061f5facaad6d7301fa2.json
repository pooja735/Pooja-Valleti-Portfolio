{"ast":null,"code":"// Animation utility functions\nexport const initScrollAnimations = () => {\n  const observerOptions = {\n    threshold: 0.1,\n    rootMargin: '0px 0px -50px 0px'\n  };\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    });\n  }, observerOptions);\n\n  // Observe all elements with animation classes\n  const animatedElements = document.querySelectorAll('.fade-in-on-scroll, .slide-left-on-scroll, .slide-right-on-scroll, .scale-in-on-scroll, .card-entrance, .stagger-item, .typing-animation, .morphing-shape, .parallax-element');\n  animatedElements.forEach(el => observer.observe(el));\n\n  // Handle staggered animations\n  const staggerContainers = document.querySelectorAll('.stagger-container');\n  staggerContainers.forEach(container => {\n    const items = container.querySelectorAll('.stagger-item');\n    items.forEach(item => observer.observe(item));\n  });\n};\nexport const initTextReveal = () => {\n  const textElements = document.querySelectorAll('.text-reveal');\n  const textObserver = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    });\n  }, {\n    threshold: 0.5\n  });\n  textElements.forEach(el => {\n    // Only process if not already processed\n    if (!el.classList.contains('text-reveal-processed')) {\n      el.classList.add('text-reveal-processed');\n      // Wrap each character in a span for individual animation\n      const text = el.textContent;\n      el.innerHTML = '';\n      text.split('').forEach(char => {\n        const span = document.createElement('span');\n        span.textContent = char === ' ' ? '\\u00A0' : char;\n        el.appendChild(span);\n      });\n      textObserver.observe(el);\n    }\n  });\n};\n\n// New: Typing animation effect\nexport const initTypingAnimation = () => {\n  const typingElements = document.querySelectorAll('.typing-animation');\n  typingElements.forEach(element => {\n    if (!element.classList.contains('typing-processed')) {\n      element.classList.add('typing-processed');\n      const text = element.textContent;\n      element.textContent = '';\n      element.style.borderRight = '2px solid var(--clr-primary)';\n      let i = 0;\n      const typeWriter = () => {\n        if (i < text.length) {\n          element.textContent += text.charAt(i);\n          i++;\n          setTimeout(typeWriter, 100);\n        } else {\n          element.style.borderRight = 'none';\n        }\n      };\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            typeWriter();\n            observer.unobserve(entry.target);\n          }\n        });\n      }, {\n        threshold: 0.5\n      });\n      observer.observe(element);\n    }\n  });\n};\n\n// New: Morphing shapes animation\nexport const initMorphingShapes = () => {\n  const morphingElements = document.querySelectorAll('.morphing-shape');\n  morphingElements.forEach(element => {\n    if (!element.classList.contains('morphing-processed')) {\n      element.classList.add('morphing-processed');\n      const shapes = ['polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)', 'polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%)', 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)', 'polygon(50% 0%, 0% 100%, 100% 100%)', 'polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%)'];\n      let currentShape = 0;\n      const morphShape = () => {\n        element.style.clipPath = shapes[currentShape];\n        currentShape = (currentShape + 1) % shapes.length;\n        setTimeout(morphShape, 2000);\n      };\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            morphShape();\n            observer.unobserve(entry.target);\n          }\n        });\n      }, {\n        threshold: 0.5\n      });\n      observer.observe(element);\n    }\n  });\n};\n\n// New: Particle system\nexport const initParticleSystem = () => {\n  const particleContainers = document.querySelectorAll('.particle-container');\n  particleContainers.forEach(container => {\n    if (!container.classList.contains('particles-processed')) {\n      container.classList.add('particles-processed');\n      const particleCount = 20;\n      const particles = [];\n      for (let i = 0; i < particleCount; i++) {\n        const particle = document.createElement('div');\n        particle.className = 'particle';\n        particle.style.left = Math.random() * 100 + '%';\n        particle.style.top = Math.random() * 100 + '%';\n        particle.style.animationDelay = Math.random() * 3 + 's';\n        particle.style.animationDuration = Math.random() * 3 + 2 + 's';\n        container.appendChild(particle);\n        particles.push(particle);\n      }\n    }\n  });\n};\n\n// New: Advanced parallax with depth\nexport const initAdvancedParallax = () => {\n  const parallaxElements = document.querySelectorAll('.parallax-element');\n  window.addEventListener('scroll', () => {\n    const scrolled = window.pageYOffset;\n    const rate = scrolled * -0.5;\n    parallaxElements.forEach((element, index) => {\n      const speed = element.dataset.speed || 0.5;\n      const depth = element.dataset.depth || 1;\n      const yPos = rate * speed * depth;\n      const scale = 1 + scrolled * 0.0001 * depth;\n      element.style.transform = `translateY(${yPos}px) scale(${scale})`;\n    });\n  });\n};\n\n// New: Magnetic effect for interactive elements\nexport const initMagneticEffect = () => {\n  const magneticElements = document.querySelectorAll('.magnetic');\n  magneticElements.forEach(element => {\n    element.addEventListener('mousemove', e => {\n      const rect = element.getBoundingClientRect();\n      const x = e.clientX - rect.left - rect.width / 2;\n      const y = e.clientY - rect.top - rect.height / 2;\n      element.style.transform = `translate(${x * 0.1}px, ${y * 0.1}px)`;\n    });\n    element.addEventListener('mouseleave', () => {\n      element.style.transform = 'translate(0px, 0px)';\n    });\n  });\n};\n\n// New: Glitch effect for text\nexport const initGlitchEffect = () => {\n  const glitchElements = document.querySelectorAll('.glitch-text');\n  glitchElements.forEach(element => {\n    if (!element.classList.contains('glitch-processed')) {\n      element.classList.add('glitch-processed');\n      const text = element.textContent;\n      element.innerHTML = `\n        <span class=\"glitch-base\">${text}</span>\n        <span class=\"glitch-layer glitch-layer-1\">${text}</span>\n        <span class=\"glitch-layer glitch-layer-2\">${text}</span>\n      `;\n      setInterval(() => {\n        element.classList.add('glitch-active');\n        setTimeout(() => {\n          element.classList.remove('glitch-active');\n        }, 200);\n      }, 3000);\n    }\n  });\n};\n\n// New: 3D tilt effect for cards\nexport const init3DTiltEffect = () => {\n  const tiltElements = document.querySelectorAll('.tilt-3d');\n  tiltElements.forEach(element => {\n    element.addEventListener('mousemove', e => {\n      const rect = element.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const centerX = rect.width / 2;\n      const centerY = rect.height / 2;\n      const rotateX = (y - centerY) / 10;\n      const rotateY = (centerX - x) / 10;\n      element.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;\n    });\n    element.addEventListener('mouseleave', () => {\n      element.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)';\n    });\n  });\n};\nexport const addFloatingElements = () => {\n  const sections = document.querySelectorAll('.section');\n  sections.forEach((section, index) => {\n    if (index % 2 === 0 && !section.querySelector('.floating-element')) {\n      // Add floating elements to even sections\n      for (let i = 0; i < 3; i++) {\n        const element = document.createElement('div');\n        element.className = 'floating-element';\n        element.style.left = `${20 + i * 30}%`;\n        element.style.top = `${10 + i * 20}%`;\n        section.appendChild(element);\n      }\n    }\n  });\n};\nexport const initParallaxEffect = () => {\n  window.addEventListener('scroll', () => {\n    const scrolled = window.pageYOffset;\n    const parallaxElements = document.querySelectorAll('.parallax');\n    parallaxElements.forEach(element => {\n      const speed = element.dataset.speed || 0.5;\n      const yPos = -(scrolled * speed);\n      element.style.transform = `translateY(${yPos}px)`;\n    });\n  });\n};\nexport const addHoverEffects = () => {\n  // Add hover effects to cards\n  const cards = document.querySelectorAll('.project, .glass-card, .contact__card');\n  cards.forEach(card => {\n    if (!card.classList.contains('hover-lift')) {\n      card.classList.add('hover-lift');\n    }\n  });\n\n  // Add shimmer effect to buttons\n  const buttons = document.querySelectorAll('.btn--outline');\n  buttons.forEach(btn => {\n    if (!btn.classList.contains('btn--animated')) {\n      btn.classList.add('btn--animated');\n    }\n  });\n\n  // Add glow effect to social links\n  const socialLinks = document.querySelectorAll('.link--icon');\n  socialLinks.forEach(link => {\n    if (!link.classList.contains('hover-glow')) {\n      link.classList.add('hover-glow');\n    }\n  });\n};\n\n// Initialize all animations with retry mechanism\nexport const initAnimations = () => {\n  const initializeWithRetry = (maxRetries = 3, delay = 100) => {\n    let retryCount = 0;\n    const attemptInit = () => {\n      try {\n        initScrollAnimations();\n        initTextReveal();\n        initTypingAnimation();\n        initMorphingShapes();\n        initParticleSystem();\n        initAdvancedParallax();\n        initMagneticEffect();\n        initGlitchEffect();\n        init3DTiltEffect();\n        addFloatingElements();\n        initParallaxEffect();\n        addHoverEffects();\n        console.log('All animations initialized successfully');\n      } catch (error) {\n        console.warn('Animation initialization failed, retrying...', error);\n        retryCount++;\n        if (retryCount < maxRetries) {\n          setTimeout(attemptInit, delay * retryCount);\n        } else {\n          console.error('Failed to initialize animations after', maxRetries, 'attempts');\n        }\n      }\n    };\n    attemptInit();\n  };\n\n  // Wait for DOM to be ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeWithRetry);\n  } else {\n    // If DOM is already loaded, wait a bit for React to render\n    setTimeout(initializeWithRetry, 100);\n  }\n};","map":{"version":3,"names":["initScrollAnimations","observerOptions","threshold","rootMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","animatedElements","document","querySelectorAll","el","observe","staggerContainers","container","items","item","initTextReveal","textElements","textObserver","contains","text","textContent","innerHTML","split","char","span","createElement","appendChild","initTypingAnimation","typingElements","element","style","borderRight","i","typeWriter","length","charAt","setTimeout","unobserve","initMorphingShapes","morphingElements","shapes","currentShape","morphShape","clipPath","initParticleSystem","particleContainers","particleCount","particles","particle","className","left","Math","random","top","animationDelay","animationDuration","push","initAdvancedParallax","parallaxElements","window","addEventListener","scrolled","pageYOffset","rate","index","speed","dataset","depth","yPos","scale","transform","initMagneticEffect","magneticElements","e","rect","getBoundingClientRect","x","clientX","width","y","clientY","height","initGlitchEffect","glitchElements","setInterval","remove","init3DTiltEffect","tiltElements","centerX","centerY","rotateX","rotateY","addFloatingElements","sections","section","querySelector","initParallaxEffect","addHoverEffects","cards","card","buttons","btn","socialLinks","link","initAnimations","initializeWithRetry","maxRetries","delay","retryCount","attemptInit","console","log","error","warn","readyState"],"sources":["C:/Users/Valleti Pooja/Downloads/portfolio-new/portfolio-new/src/utils/animations.js"],"sourcesContent":["// Animation utility functions\r\nexport const initScrollAnimations = () => {\r\n  const observerOptions = {\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -50px 0px'\r\n  };\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible');\r\n      }\r\n    });\r\n  }, observerOptions);\r\n\r\n  // Observe all elements with animation classes\r\n  const animatedElements = document.querySelectorAll(\r\n    '.fade-in-on-scroll, .slide-left-on-scroll, .slide-right-on-scroll, .scale-in-on-scroll, .card-entrance, .stagger-item, .typing-animation, .morphing-shape, .parallax-element'\r\n  );\r\n\r\n  animatedElements.forEach(el => observer.observe(el));\r\n\r\n  // Handle staggered animations\r\n  const staggerContainers = document.querySelectorAll('.stagger-container');\r\n  staggerContainers.forEach(container => {\r\n    const items = container.querySelectorAll('.stagger-item');\r\n    items.forEach(item => observer.observe(item));\r\n  });\r\n};\r\n\r\nexport const initTextReveal = () => {\r\n  const textElements = document.querySelectorAll('.text-reveal');\r\n  \r\n  const textObserver = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible');\r\n      }\r\n    });\r\n  }, { threshold: 0.5 });\r\n\r\n  textElements.forEach(el => {\r\n    // Only process if not already processed\r\n    if (!el.classList.contains('text-reveal-processed')) {\r\n      el.classList.add('text-reveal-processed');\r\n      // Wrap each character in a span for individual animation\r\n      const text = el.textContent;\r\n      el.innerHTML = '';\r\n      text.split('').forEach(char => {\r\n        const span = document.createElement('span');\r\n        span.textContent = char === ' ' ? '\\u00A0' : char;\r\n        el.appendChild(span);\r\n      });\r\n      textObserver.observe(el);\r\n    }\r\n  });\r\n};\r\n\r\n// New: Typing animation effect\r\nexport const initTypingAnimation = () => {\r\n  const typingElements = document.querySelectorAll('.typing-animation');\r\n  \r\n  typingElements.forEach(element => {\r\n    if (!element.classList.contains('typing-processed')) {\r\n      element.classList.add('typing-processed');\r\n      const text = element.textContent;\r\n      element.textContent = '';\r\n      element.style.borderRight = '2px solid var(--clr-primary)';\r\n      \r\n      let i = 0;\r\n      const typeWriter = () => {\r\n        if (i < text.length) {\r\n          element.textContent += text.charAt(i);\r\n          i++;\r\n          setTimeout(typeWriter, 100);\r\n        } else {\r\n          element.style.borderRight = 'none';\r\n        }\r\n      };\r\n      \r\n      const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            typeWriter();\r\n            observer.unobserve(entry.target);\r\n          }\r\n        });\r\n      }, { threshold: 0.5 });\r\n      \r\n      observer.observe(element);\r\n    }\r\n  });\r\n};\r\n\r\n// New: Morphing shapes animation\r\nexport const initMorphingShapes = () => {\r\n  const morphingElements = document.querySelectorAll('.morphing-shape');\r\n  \r\n  morphingElements.forEach(element => {\r\n    if (!element.classList.contains('morphing-processed')) {\r\n      element.classList.add('morphing-processed');\r\n      \r\n      const shapes = [\r\n        'polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)',\r\n        'polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%)',\r\n        'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\r\n        'polygon(50% 0%, 0% 100%, 100% 100%)',\r\n        'polygon(20% 0%, 80% 0%, 100% 20%, 100% 80%, 80% 100%, 20% 100%, 0% 80%, 0% 20%)'\r\n      ];\r\n      \r\n      let currentShape = 0;\r\n      \r\n      const morphShape = () => {\r\n        element.style.clipPath = shapes[currentShape];\r\n        currentShape = (currentShape + 1) % shapes.length;\r\n        setTimeout(morphShape, 2000);\r\n      };\r\n      \r\n      const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            morphShape();\r\n            observer.unobserve(entry.target);\r\n          }\r\n        });\r\n      }, { threshold: 0.5 });\r\n      \r\n      observer.observe(element);\r\n    }\r\n  });\r\n};\r\n\r\n// New: Particle system\r\nexport const initParticleSystem = () => {\r\n  const particleContainers = document.querySelectorAll('.particle-container');\r\n  \r\n  particleContainers.forEach(container => {\r\n    if (!container.classList.contains('particles-processed')) {\r\n      container.classList.add('particles-processed');\r\n      \r\n      const particleCount = 20;\r\n      const particles = [];\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        const particle = document.createElement('div');\r\n        particle.className = 'particle';\r\n        particle.style.left = Math.random() * 100 + '%';\r\n        particle.style.top = Math.random() * 100 + '%';\r\n        particle.style.animationDelay = Math.random() * 3 + 's';\r\n        particle.style.animationDuration = (Math.random() * 3 + 2) + 's';\r\n        container.appendChild(particle);\r\n        particles.push(particle);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n// New: Advanced parallax with depth\r\nexport const initAdvancedParallax = () => {\r\n  const parallaxElements = document.querySelectorAll('.parallax-element');\r\n  \r\n  window.addEventListener('scroll', () => {\r\n    const scrolled = window.pageYOffset;\r\n    const rate = scrolled * -0.5;\r\n    \r\n    parallaxElements.forEach((element, index) => {\r\n      const speed = element.dataset.speed || 0.5;\r\n      const depth = element.dataset.depth || 1;\r\n      const yPos = rate * speed * depth;\r\n      const scale = 1 + (scrolled * 0.0001 * depth);\r\n      \r\n      element.style.transform = `translateY(${yPos}px) scale(${scale})`;\r\n    });\r\n  });\r\n};\r\n\r\n// New: Magnetic effect for interactive elements\r\nexport const initMagneticEffect = () => {\r\n  const magneticElements = document.querySelectorAll('.magnetic');\r\n  \r\n  magneticElements.forEach(element => {\r\n    element.addEventListener('mousemove', (e) => {\r\n      const rect = element.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n      \r\n      element.style.transform = `translate(${x * 0.1}px, ${y * 0.1}px)`;\r\n    });\r\n    \r\n    element.addEventListener('mouseleave', () => {\r\n      element.style.transform = 'translate(0px, 0px)';\r\n    });\r\n  });\r\n};\r\n\r\n// New: Glitch effect for text\r\nexport const initGlitchEffect = () => {\r\n  const glitchElements = document.querySelectorAll('.glitch-text');\r\n  \r\n  glitchElements.forEach(element => {\r\n    if (!element.classList.contains('glitch-processed')) {\r\n      element.classList.add('glitch-processed');\r\n      \r\n      const text = element.textContent;\r\n      element.innerHTML = `\r\n        <span class=\"glitch-base\">${text}</span>\r\n        <span class=\"glitch-layer glitch-layer-1\">${text}</span>\r\n        <span class=\"glitch-layer glitch-layer-2\">${text}</span>\r\n      `;\r\n      \r\n      setInterval(() => {\r\n        element.classList.add('glitch-active');\r\n        setTimeout(() => {\r\n          element.classList.remove('glitch-active');\r\n        }, 200);\r\n      }, 3000);\r\n    }\r\n  });\r\n};\r\n\r\n// New: 3D tilt effect for cards\r\nexport const init3DTiltEffect = () => {\r\n  const tiltElements = document.querySelectorAll('.tilt-3d');\r\n  \r\n  tiltElements.forEach(element => {\r\n    element.addEventListener('mousemove', (e) => {\r\n      const rect = element.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      \r\n      const centerX = rect.width / 2;\r\n      const centerY = rect.height / 2;\r\n      \r\n      const rotateX = (y - centerY) / 10;\r\n      const rotateY = (centerX - x) / 10;\r\n      \r\n      element.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;\r\n    });\r\n    \r\n    element.addEventListener('mouseleave', () => {\r\n      element.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)';\r\n    });\r\n  });\r\n};\r\n\r\nexport const addFloatingElements = () => {\r\n  const sections = document.querySelectorAll('.section');\r\n  \r\n  sections.forEach((section, index) => {\r\n    if (index % 2 === 0 && !section.querySelector('.floating-element')) {\r\n      // Add floating elements to even sections\r\n      for (let i = 0; i < 3; i++) {\r\n        const element = document.createElement('div');\r\n        element.className = 'floating-element';\r\n        element.style.left = `${20 + i * 30}%`;\r\n        element.style.top = `${10 + i * 20}%`;\r\n        section.appendChild(element);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const initParallaxEffect = () => {\r\n  window.addEventListener('scroll', () => {\r\n    const scrolled = window.pageYOffset;\r\n    const parallaxElements = document.querySelectorAll('.parallax');\r\n    \r\n    parallaxElements.forEach(element => {\r\n      const speed = element.dataset.speed || 0.5;\r\n      const yPos = -(scrolled * speed);\r\n      element.style.transform = `translateY(${yPos}px)`;\r\n    });\r\n  });\r\n};\r\n\r\nexport const addHoverEffects = () => {\r\n  // Add hover effects to cards\r\n  const cards = document.querySelectorAll('.project, .glass-card, .contact__card');\r\n  cards.forEach(card => {\r\n    if (!card.classList.contains('hover-lift')) {\r\n      card.classList.add('hover-lift');\r\n    }\r\n  });\r\n\r\n  // Add shimmer effect to buttons\r\n  const buttons = document.querySelectorAll('.btn--outline');\r\n  buttons.forEach(btn => {\r\n    if (!btn.classList.contains('btn--animated')) {\r\n      btn.classList.add('btn--animated');\r\n    }\r\n  });\r\n\r\n  // Add glow effect to social links\r\n  const socialLinks = document.querySelectorAll('.link--icon');\r\n  socialLinks.forEach(link => {\r\n    if (!link.classList.contains('hover-glow')) {\r\n      link.classList.add('hover-glow');\r\n    }\r\n  });\r\n};\r\n\r\n// Initialize all animations with retry mechanism\r\nexport const initAnimations = () => {\r\n  const initializeWithRetry = (maxRetries = 3, delay = 100) => {\r\n    let retryCount = 0;\r\n    \r\n    const attemptInit = () => {\r\n      try {\r\n        initScrollAnimations();\r\n        initTextReveal();\r\n        initTypingAnimation();\r\n        initMorphingShapes();\r\n        initParticleSystem();\r\n        initAdvancedParallax();\r\n        initMagneticEffect();\r\n        initGlitchEffect();\r\n        init3DTiltEffect();\r\n        addFloatingElements();\r\n        initParallaxEffect();\r\n        addHoverEffects();\r\n        console.log('All animations initialized successfully');\r\n      } catch (error) {\r\n        console.warn('Animation initialization failed, retrying...', error);\r\n        retryCount++;\r\n        if (retryCount < maxRetries) {\r\n          setTimeout(attemptInit, delay * retryCount);\r\n        } else {\r\n          console.error('Failed to initialize animations after', maxRetries, 'attempts');\r\n        }\r\n      }\r\n    };\r\n    \r\n    attemptInit();\r\n  };\r\n\r\n  // Wait for DOM to be ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initializeWithRetry);\r\n  } else {\r\n    // If DOM is already loaded, wait a bit for React to render\r\n    setTimeout(initializeWithRetry, 100);\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}