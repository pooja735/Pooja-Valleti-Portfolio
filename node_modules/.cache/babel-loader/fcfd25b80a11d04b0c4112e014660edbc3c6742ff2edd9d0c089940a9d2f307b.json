{"ast":null,"code":"// Animation utility functions\nexport const initScrollAnimations = () => {\n  const observerOptions = {\n    threshold: 0.1,\n    rootMargin: '0px 0px -50px 0px'\n  };\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    });\n  }, observerOptions);\n\n  // Observe all elements with animation classes\n  const animatedElements = document.querySelectorAll('.fade-in-on-scroll, .slide-left-on-scroll, .slide-right-on-scroll, .scale-in-on-scroll, .card-entrance, .stagger-item');\n  animatedElements.forEach(el => observer.observe(el));\n\n  // Handle staggered animations\n  const staggerContainers = document.querySelectorAll('.stagger-container');\n  staggerContainers.forEach(container => {\n    const items = container.querySelectorAll('.stagger-item');\n    items.forEach(item => observer.observe(item));\n  });\n};\nexport const initTextReveal = () => {\n  const textElements = document.querySelectorAll('.text-reveal');\n  const textObserver = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    });\n  }, {\n    threshold: 0.5\n  });\n  textElements.forEach(el => {\n    // Wrap each character in a span for individual animation\n    const text = el.textContent;\n    el.innerHTML = '';\n    text.split('').forEach(char => {\n      const span = document.createElement('span');\n      span.textContent = char === ' ' ? '\\u00A0' : char;\n      el.appendChild(span);\n    });\n    textObserver.observe(el);\n  });\n};\nexport const addFloatingElements = () => {\n  const sections = document.querySelectorAll('.section');\n  sections.forEach((section, index) => {\n    if (index % 2 === 0) {\n      // Add floating elements to even sections\n      for (let i = 0; i < 3; i++) {\n        const element = document.createElement('div');\n        element.className = 'floating-element';\n        element.style.left = `${20 + i * 30}%`;\n        element.style.top = `${10 + i * 20}%`;\n        section.appendChild(element);\n      }\n    }\n  });\n};\nexport const initParallaxEffect = () => {\n  window.addEventListener('scroll', () => {\n    const scrolled = window.pageYOffset;\n    const parallaxElements = document.querySelectorAll('.parallax');\n    parallaxElements.forEach(element => {\n      const speed = element.dataset.speed || 0.5;\n      const yPos = -(scrolled * speed);\n      element.style.transform = `translateY(${yPos}px)`;\n    });\n  });\n};\nexport const addHoverEffects = () => {\n  // Add hover effects to cards\n  const cards = document.querySelectorAll('.project, .glass-card, .contact__card');\n  cards.forEach(card => {\n    card.classList.add('hover-lift');\n  });\n\n  // Add shimmer effect to buttons\n  const buttons = document.querySelectorAll('.btn--outline');\n  buttons.forEach(btn => {\n    btn.classList.add('btn--animated');\n  });\n\n  // Add glow effect to social links\n  const socialLinks = document.querySelectorAll('.link--icon');\n  socialLinks.forEach(link => {\n    link.classList.add('hover-glow');\n  });\n};\n\n// Initialize all animations\nexport const initAnimations = () => {\n  // Wait for DOM to be ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      initScrollAnimations();\n      initTextReveal();\n      addFloatingElements();\n      initParallaxEffect();\n      addHoverEffects();\n    });\n  } else {\n    initScrollAnimations();\n    initTextReveal();\n    addFloatingElements();\n    initParallaxEffect();\n    addHoverEffects();\n  }\n};","map":{"version":3,"names":["initScrollAnimations","observerOptions","threshold","rootMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","animatedElements","document","querySelectorAll","el","observe","staggerContainers","container","items","item","initTextReveal","textElements","textObserver","text","textContent","innerHTML","split","char","span","createElement","appendChild","addFloatingElements","sections","section","index","i","element","className","style","left","top","initParallaxEffect","window","addEventListener","scrolled","pageYOffset","parallaxElements","speed","dataset","yPos","transform","addHoverEffects","cards","card","buttons","btn","socialLinks","link","initAnimations","readyState"],"sources":["C:/Users/Valleti Pooja/Downloads/portfolio-new/portfolio-new/src/utils/animations.js"],"sourcesContent":["// Animation utility functions\r\nexport const initScrollAnimations = () => {\r\n  const observerOptions = {\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -50px 0px'\r\n  };\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible');\r\n      }\r\n    });\r\n  }, observerOptions);\r\n\r\n  // Observe all elements with animation classes\r\n  const animatedElements = document.querySelectorAll(\r\n    '.fade-in-on-scroll, .slide-left-on-scroll, .slide-right-on-scroll, .scale-in-on-scroll, .card-entrance, .stagger-item'\r\n  );\r\n\r\n  animatedElements.forEach(el => observer.observe(el));\r\n\r\n  // Handle staggered animations\r\n  const staggerContainers = document.querySelectorAll('.stagger-container');\r\n  staggerContainers.forEach(container => {\r\n    const items = container.querySelectorAll('.stagger-item');\r\n    items.forEach(item => observer.observe(item));\r\n  });\r\n};\r\n\r\nexport const initTextReveal = () => {\r\n  const textElements = document.querySelectorAll('.text-reveal');\r\n  \r\n  const textObserver = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        entry.target.classList.add('visible');\r\n      }\r\n    });\r\n  }, { threshold: 0.5 });\r\n\r\n  textElements.forEach(el => {\r\n    // Wrap each character in a span for individual animation\r\n    const text = el.textContent;\r\n    el.innerHTML = '';\r\n    text.split('').forEach(char => {\r\n      const span = document.createElement('span');\r\n      span.textContent = char === ' ' ? '\\u00A0' : char;\r\n      el.appendChild(span);\r\n    });\r\n    textObserver.observe(el);\r\n  });\r\n};\r\n\r\nexport const addFloatingElements = () => {\r\n  const sections = document.querySelectorAll('.section');\r\n  \r\n  sections.forEach((section, index) => {\r\n    if (index % 2 === 0) {\r\n      // Add floating elements to even sections\r\n      for (let i = 0; i < 3; i++) {\r\n        const element = document.createElement('div');\r\n        element.className = 'floating-element';\r\n        element.style.left = `${20 + i * 30}%`;\r\n        element.style.top = `${10 + i * 20}%`;\r\n        section.appendChild(element);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const initParallaxEffect = () => {\r\n  window.addEventListener('scroll', () => {\r\n    const scrolled = window.pageYOffset;\r\n    const parallaxElements = document.querySelectorAll('.parallax');\r\n    \r\n    parallaxElements.forEach(element => {\r\n      const speed = element.dataset.speed || 0.5;\r\n      const yPos = -(scrolled * speed);\r\n      element.style.transform = `translateY(${yPos}px)`;\r\n    });\r\n  });\r\n};\r\n\r\nexport const addHoverEffects = () => {\r\n  // Add hover effects to cards\r\n  const cards = document.querySelectorAll('.project, .glass-card, .contact__card');\r\n  cards.forEach(card => {\r\n    card.classList.add('hover-lift');\r\n  });\r\n\r\n  // Add shimmer effect to buttons\r\n  const buttons = document.querySelectorAll('.btn--outline');\r\n  buttons.forEach(btn => {\r\n    btn.classList.add('btn--animated');\r\n  });\r\n\r\n  // Add glow effect to social links\r\n  const socialLinks = document.querySelectorAll('.link--icon');\r\n  socialLinks.forEach(link => {\r\n    link.classList.add('hover-glow');\r\n  });\r\n};\r\n\r\n// Initialize all animations\r\nexport const initAnimations = () => {\r\n  // Wait for DOM to be ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      initScrollAnimations();\r\n      initTextReveal();\r\n      addFloatingElements();\r\n      initParallaxEffect();\r\n      addHoverEffects();\r\n    });\r\n  } else {\r\n    initScrollAnimations();\r\n    initTextReveal();\r\n    addFloatingElements();\r\n    initParallaxEffect();\r\n    addHoverEffects();\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}